* Crea tu primera CSS Grid

    Convierte cualquier elemento HTML en una grid al establecer 
    la propiedad display a grid. Esto te da la habilidad de usar 
    todas las demás propiedades asociadas con CSS Grid.

    Nota: en CSS Grid, el elemento padre se refiere como el 
    contenedor y sus hijos se llaman elementos.


* Agrega columnas con grid-template-columns

    Crear un simple elemento cuadrícula (grid) no te llevará muy 
    lejos. Necesitas también definir su estructura. Para agregar 
    columnas a la cuadrícula, usa la propiedad 
    grid-template-columns en el contenedor de la cuadrícula 
    como se demuestra a continuación:

        .container {
            display: grid;
            grid-template-columns: 50px 50px;
        }
    
    Esto le dará a tu cuadrícula dos columnas que tienen 
    50px de ancho cada una. 
    El número de parámetros que se le da a la propiedad 
    grid-template-columns indica el número de columnas en la 
    cuadrícula y el valor de cada parámetro indica el ancho 
    de cada columna.


* Agrega filas con grid-template-rows

    La cuadrícula (grid) que creaste en el último desafío 
    establecerá el número de filas automáticamente. 
    Para ajustar las filas manualmente, usa la propiedad 
    grid-template-rows de la misma manera en la que usaste 
    grid-template-columns en el desafío anterior.


* Usa unidades CSS Grid para cambiar el tamaño de las 
    columnas y filas

    Puedes usar unidades absolutas y relativas como px y em 
    en CSS Grid para definir el tamaño de filas y columnas. 
    Puedes usar estas también:

    fr: fija la columna o fila a una fracción del espacio 
        disponible,

    auto: fija la columna o fila al ancho o alto de su 
        contenido automáticamente,

    %: ajusta la columna o fila al porcentaje de ancho de 
        su contenedor.

    A continuación el código que genera el resultado de la 
    vista previa:

        grid-template-columns: auto 50px 10% 2fr 1fr;

    Esta línea de código genera cinco columnas. 
    La primera columna es tan ancha como su contenido, 
    la segunda tiene 50px de ancho, 
    la tercera es el 10% de su contenedor y para las 
    últimas dos columnas; el espacio restante es 
    dividido en tres secciones: 
    dos son asignadas a la cuarta columna y una a la 
    quinta columna.


* Crea un espacio entre columnas usando grid-column-gap

    Hasta ahora en las grids que has creado, las columnas 
    han estado todas juntas. Algunas veces querrás un 
    espacio entre las columnas. 
    Para agregar un espacio entre las columnas, usa la 
    propiedad grid-column-gap de la siguiente manera:

        grid-column-gap: 10px;
    
    Esto crea espacios vacíos de 10px entre todas las 
    columnas.


* Crea un espacio entre filas usando grid-row-gap

    Puedes agregar un espacio entre las filas usando 
    grid-row-gap de la misma manera en la que agregaste 
    un espacio entre las columnas en el desafío anterior.


* Agrega espacios más rápido con grid-gap
    
    grid-gap es una propiedad abreviada para grid-row-gap y 
    grid-column-gap de los dos desafíos anteriores que es 
    más conveniente usar. Si grid-gap tiene un valor, 
    creará un espacio entre todas las filas y columnas. 
    Sin embargo, si hay dos valores, usará el primero de estos 
    para poner los espacios entre las filas y el segundo para 
    los espacios entre las columnas.







