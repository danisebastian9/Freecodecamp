* Haz que los elementos solo sean visibles para un lector de pantalla 
    mediante CSS personalizado
        
    ¿Has notado que todos los desafíos de accesibilidad aplicados hasta 
    ahora no han usado ningún CSS? Esto muestra la importancia de utilizar 
    un esquema de documento lógico y etiquetas semánticamente significativas 
    alrededor de su contenido antes de introducir el aspecto de diseño visual.

    Sin embargo, la magia de CSS también puede mejorar la accesibilidad en tu 
    página cuando deseas ocultar visualmente contenido destinado solo para 
    lectores de pantalla. Esto sucede cuando la información está en un formato 
    visual (como un gráfico), pero los usuarios del lector de pantalla 
    necesitan una presentación alternativa (como una tabla) para acceder a los 
    datos. CSS se utiliza para colocar los elementos exclusivos de lector de 
    pantalla fuera del área visual de la ventana del navegador.

    Aquí hay un ejemplo de las reglas de CSS que logran esto:

        .sr-only { 
            position: absolute; 
            left: -10000px; 
            width: 1px; 
            height: 1px; 
            top: auto; 
            overflow: hidden; 
        }
    
    Nota: Los siguientes enfoques CSS No harán lo mismo:

    display: none; o visibility: hidden; oculta el contenido para todos, 
    incluidos los usuarios del lector de pantalla
    Los valores cero para los tamaños del píxel, 
    como width: 0px; height: 0px; eliminan ese elemento del flujo de 
    tu documento, lo que significa que los lectores de pantalla lo 
    ignorarán


* Mejora la legibilidad con texto de alto contraste

    El bajo contraste entre los colores de primer plano y de fondo puede 
    dificultar la lectura del texto. Suficiente contraste mejora la 
    legibilidad de tu contenido, pero ¿qué significa exactamente 
    "suficiente"?

    Las Directrices de Accesibilidad al Contenido Web (WCAG) recomiendan 
    al menos una relación de contraste de 4.5 a 1 para el texto normal. 
    La relación se calcula comparando los valores de luminancia relativa 
    de dos colores. Esto varía de 1:1 para el mismo color, o ningún 
    contraste, a 21:1 para blanco contra negro, el contraste más sustancial. 
    Hay muchas herramientas de comprobación de contraste disponibles en 
    línea que calculan esta relación por ti.


* Evita problemas de percepción del color usando el suficiente contraste

    El color es una parte importante del diseño visual, pero su aplicación 
    presenta dos problemas de accesibilidad. El primer problema es que no 
    se debe utilizar el color como la única forma de transmitir información 
    importante, porque los lectores de pantalla no lo distinguen. 
    En segundo lugar, los colores de primer plano y de fondo necesitan 
    tener suficiente contraste para que los usuarios sean capaces de 
    distinguirlos.

    Los desafíos anteriores explicaron la existencia de texto alternativo 
    para remediar el primer problema. El último desafío introdujo herramientas 
    de comprobación de contraste para ayudar con el segundo problema. 
    El índice de contraste de 4.5:1 recomendado por WCAG se aplica tanto 
    para los colores como para combinaciones de escalas de grises.

    Los usuarios daltónicos tienen problemas para distinguir algunos 
    colores de otros. Esto generalmente depende del tono pero también depende 
    a veces de su luminosidad. Posiblemente recuerdes que el índice de 
    contraste se calcula utilizando los valores de luminancia (o luminosidad) 
    relativa de los colores de primer plano y del fondo.

    En la práctica, la relación de contraste de 4.5:1 puede alcanzarse 
    oscureciendo el color más oscuro (o sea, añadiendo negro) y aclarando 
    el color más claro (añadiéndole blanco). Se considera que los tonos 
    más oscuros en la rueda de color son los azules, violetas, magentas 
    y los rojos, mientras que los colores más claros son los naranjas, 
    amarillos, verdes y azul-verdosos.


* Evita problemas de color para usuarios daltónicos eligiendo 
    cuidadosamente los colores que transmiten información
        
    Existen varias formas de daltonismo o ceguera al color. Estos pueden 
    ir desde tener una sensibilidad reducida a una longitud de onda de 
    luz específica, hasta la incapacidad total de ver algún color. 
    La forma más común en que se presenta es una sensibilidad reducida 
    para detectar tonos de verde.

    Por ejemplo, si dos colores verdes similares son el color usado en el 
    primer plano y el fondo de tu contenido, un usuario daltónico podría 
    no ser capaz de distinguirlos entre sí. Podemos pensar en los colores 
    cercanos como aquellos colores que son vecinos o adyacentes en la 
    rueda de color. Por este motivo, las combinaciones de estos colores 
    deben evitarse cuando se usan para transmitir información importante.

    Nota: Algunas herramientas de selección de colores disponibles en 
    Internet incluyen simulaciones visuales de cómo serían vistos por 
    usuarios con diversos tipos de daltonismo. Estos son excelentes 
    recursos que puedes aprovechar, sumados a las calculadoras para 
    verificar el contraste de color que puedes encontrar en Internet.

* Da significado a los enlaces agregando un texto descriptivo

    Los lectores de pantalla tienen varias opciones para qué tipo de 
    contenido lee su dispositivo. Estas opciones incluyen saltar a 
    elementos de referencia (o sobre) o saltar al contenido principal, 
    u obtener un resumen de la página en los títulos. Otra opción es 
    escuchar la narración de los enlaces disponibles en una página.

    Los lectores de pantalla hacen esto leyendo el texto del enlace, 
    o lo que haya entre las etiquetas anchor (a). Tener una lista de 
    enlaces que solo digan "clic aquí" o "leer más" no ayuda. En su lugar, 
    utilice texto breve pero descriptivo dentro de las etiquetas a 
    para proporcionar más significado a estos usuarios.
        

* Haz que los enlaces sean navegables con claves de acceso HTML

    HTML ofrece el atributo accesskey para especificar una tecla de 
    acceso directo para activar o enfocar un elemento. 
    Añadiendo un atributo accesskey puede hacer que la navegación 
    sea más eficiente para los usuarios que solo utilizan teclado.

    HTML5 permite que este atributo se use en cualquier elemento, 
    pero es particularmente útil cuando se usa con elementos interactivos. 
    Esto incluye enlaces, botones y controles de formulario.

    Aquí hay un ejemplo:

        <button accesskey="b">Important Button</button>



* Usa tabindex para agregar enfoque de teclado a un elemento

    El atributo HTML tabindex tiene tres funciones distintas relacionadas 
    con el foco del teclado de un elemento. Cuando está en una etiqueta, 
    indica que se puede hacer foco en el elemento. 
    El valor (un número entero que es positivo, negativo o cero) determina 
    el comportamiento.

    Ciertos elementos, como los vínculos y los controles de formulario, 
    reciben automáticamente el foco del teclado cuando un usuario pestañas 
    a través de una página. Está en el mismo orden en que los elementos 
    vienen en la fuente del lenguaje de marcado de HTML. 
    Esta misma funcionalidad se puede dar a otros elementos, como div, 
    span y p, colocando un atributo tabindex="0". Aquí hay un ejemplo:

        <div tabindex="0">I need keyboard focus!</div>

    Nota: Un valor negativo de tabindex (normalmente -1) indica que un 
    elemento es enfocable, pero no es accesible por el teclado. 
    Este método generalmente se usa para enfocar el contenido mediante 
    programación (como cuando se activa un div utilizando para una 
    ventana emergente), y esta más allá del alcance de estos desafíos.


* Utiliza tabindex para especificar el orden de enfoque del teclado 
    para múltiples elementos
        
    El atributo tabindex también especifica el orden de tabulación 
    exacto de los elementos. Esto se logra cuando el valor del 
    atributo se establece en un número positivo de 1 o superior.

    Establecer un tabindex="1" hará que el teclado se enfoque primero 
    en ese elemento. Luego, recorre la secuencia de valores tabindex 
    especificados (2, 3, etc.), antes de pasar a los elementos 
    predeterminados y tabindex="0".

    Es importante tener en cuenta que cuando el orden de tabulación 
    se establece de esta manera, anula el orden predeterminado 
    (que usa el código fuente HTML). Esto puede confundir a los usuarios 
    que esperan comenzar la navegación desde la parte superior de la página. 
    Esta técnica puede ser necesaria en algunas circunstancias pero en 
    términos de accesibilidad, ten cuidado antes de aplicarla.

    Aquí hay un ejemplo:

        <div tabindex="1">I get keyboard focus, and I get it first!</div>
        <div tabindex="2">I get keyboard focus, and I get it second!</div>


